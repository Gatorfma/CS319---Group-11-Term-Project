# Generated by Django 5.2.1 on 2025-05-11 15:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_instructorprofile_is_ta_coordinator'),
        ('courses', '0002_remove_exam_classroom_exam_classroom'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvoidGraderPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_order', models.PositiveIntegerField(default=0, help_text='Lower numbers indicate higher preference')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.taprofile')),
            ],
            options={
                'verbose_name': 'Grader to Avoid',
                'verbose_name_plural': 'Graders to Avoid',
                'ordering': ['preference_order'],
            },
        ),
        migrations.CreateModel(
            name='AvoidTAPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_order', models.PositiveIntegerField(default=0, help_text='Lower numbers indicate higher preference')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.taprofile')),
            ],
            options={
                'verbose_name': 'TA to Avoid',
                'verbose_name_plural': 'TAs to Avoid',
                'ordering': ['preference_order'],
            },
        ),
        migrations.CreateModel(
            name='GraderPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_order', models.PositiveIntegerField(default=0, help_text='Lower numbers indicate higher preference')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.taprofile')),
            ],
            options={
                'verbose_name': 'Preferred Grader',
                'verbose_name_plural': 'Preferred Graders',
                'ordering': ['preference_order'],
            },
        ),
        migrations.CreateModel(
            name='MustHaveTAPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_order', models.PositiveIntegerField(default=0, help_text='Lower numbers indicate higher preference')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.taprofile')),
            ],
            options={
                'verbose_name': 'Must-have TA',
                'verbose_name_plural': 'Must-have TAs',
                'ordering': ['preference_order'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Semester name (e.g. 'Fall 2025')", max_length=100)),
                ('start_date', models.DateField(help_text='Start date of the semester')),
                ('end_date', models.DateField(help_text='End date of the semester')),
                ('request_start_date', models.DateField(help_text='Date when instructors can start submitting TA requests')),
                ('request_end_date', models.DateField(help_text='Deadline for TA request submissions')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this is the current active semester')),
                ('ta_coordinator', models.ForeignKey(blank=True, help_text='Instructor responsible for managing TA assignments this semester', limit_choices_to={'role': 'INSTRUCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinated_semesters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Semester',
                'verbose_name_plural': 'Semesters',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TAPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_order', models.PositiveIntegerField(default=0, help_text='Lower numbers indicate higher preference')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.taprofile')),
            ],
            options={
                'verbose_name': 'Preferred TA',
                'verbose_name_plural': 'Preferred TAs',
                'ordering': ['preference_order'],
            },
        ),
        migrations.CreateModel(
            name='TARequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_ta_loads', models.PositiveIntegerField(help_text='Minimum number of TA loads requested')),
                ('max_ta_loads', models.PositiveIntegerField(help_text='Maximum number of TA loads requested')),
                ('graders_requested', models.PositiveIntegerField(default=0, help_text='Number of graders requested')),
                ('must_have_justification', models.TextField(blank=True, help_text='Justification for must-have TAs')),
                ('general_justification', models.TextField(blank=True, help_text='Justification for overage or other issues')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(help_text='Course that needs TAs', on_delete=django.db.models.deletion.CASCADE, related_name='ta_request_cs_dept', to='courses.course')),
                ('graders_to_avoid', models.ManyToManyField(blank=True, help_text='Graders to avoid assigning to this course', related_name='avoid_as_grader', through='ta_request_cs_dept.AvoidGraderPreference', to='accounts.taprofile')),
                ('instructor', models.ForeignKey(limit_choices_to={'role': 'INSTRUCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='ta_request_cs_dept', to=settings.AUTH_USER_MODEL)),
                ('must_have_tas', models.ManyToManyField(blank=True, help_text='TAs that must be assigned to this course', related_name='must_have_requests', through='ta_request_cs_dept.MustHaveTAPreference', to='accounts.taprofile')),
                ('preferred_graders', models.ManyToManyField(blank=True, help_text='Preferred graders in order of preference', related_name='preferred_as_grader', through='ta_request_cs_dept.GraderPreference', to='accounts.taprofile')),
                ('preferred_tas', models.ManyToManyField(blank=True, help_text='Preferred TAs in order of preference', related_name='preferred_by_requests', through='ta_request_cs_dept.TAPreference', to='accounts.taprofile')),
                ('semester', models.ForeignKey(help_text='Semester for which this request applies', on_delete=django.db.models.deletion.CASCADE, related_name='ta_request_cs_dept', to='ta_request_cs_dept.semester')),
                ('tas_to_avoid', models.ManyToManyField(blank=True, help_text='TAs to avoid assigning to this course', related_name='avoid_as_ta', through='ta_request_cs_dept.AvoidTAPreference', to='accounts.taprofile')),
            ],
            options={
                'verbose_name': 'TA Request',
                'verbose_name_plural': 'TA Requests',
                'unique_together': {('instructor', 'course', 'semester')},
            },
        ),
        migrations.AddField(
            model_name='tapreference',
            name='ta_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ta_request_cs_dept.tarequest'),
        ),
        migrations.AddField(
            model_name='musthavetapreference',
            name='ta_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ta_request_cs_dept.tarequest'),
        ),
        migrations.AddField(
            model_name='graderpreference',
            name='ta_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ta_request_cs_dept.tarequest'),
        ),
        migrations.AddField(
            model_name='avoidtapreference',
            name='ta_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ta_request_cs_dept.tarequest'),
        ),
        migrations.AddField(
            model_name='avoidgraderpreference',
            name='ta_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ta_request_cs_dept.tarequest'),
        ),
        migrations.AlterUniqueTogether(
            name='tapreference',
            unique_together={('ta_request', 'ta')},
        ),
        migrations.AlterUniqueTogether(
            name='musthavetapreference',
            unique_together={('ta_request', 'ta')},
        ),
        migrations.AlterUniqueTogether(
            name='graderpreference',
            unique_together={('ta_request', 'ta')},
        ),
        migrations.AlterUniqueTogether(
            name='avoidtapreference',
            unique_together={('ta_request', 'ta')},
        ),
        migrations.AlterUniqueTogether(
            name='avoidgraderpreference',
            unique_together={('ta_request', 'ta')},
        ),
    ]
