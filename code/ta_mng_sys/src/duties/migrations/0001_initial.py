# Generated by Django 5.2 on 2025-05-06 21:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_initial'),
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GradingDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.PositiveIntegerField(help_text='Length of duty in hours')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=1)),
                ('description', models.TextField(blank=True, help_text='Optional description or notes')),
                ('grading_type', models.CharField(choices=[('MID', 'Midterm'), ('FIN', 'Final'), ('HW', 'Homework')], help_text='Type of grading task', max_length=6)),
                ('assigned_ta', models.ForeignKey(blank=True, help_text='TA assigned to this duty', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)sduties', to='accounts.taprofile')),
                ('created_by', models.ForeignKey(help_text='Instructor or staff who created this duty', limit_choices_to={'role': 'INSTRUCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)sduties', to=settings.AUTH_USER_MODEL)),
                ('offering', models.ForeignKey(help_text='Course offering this duty belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)sduties', to='courses.courseoffering')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.PositiveIntegerField(help_text='Length of duty in hours')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=1)),
                ('description', models.TextField(blank=True, help_text='Optional description or notes')),
                ('lab_number', models.PositiveIntegerField(help_text='Lab number for this duty')),
                ('assigned_ta', models.ForeignKey(blank=True, help_text='TA assigned to this duty', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)sduties', to='accounts.taprofile')),
                ('created_by', models.ForeignKey(help_text='Instructor or staff who created this duty', limit_choices_to={'role': 'INSTRUCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)sduties', to=settings.AUTH_USER_MODEL)),
                ('offering', models.ForeignKey(help_text='Course offering this duty belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)sduties', to='courses.courseoffering')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfficeHourDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.PositiveIntegerField(help_text='Length of duty in hours')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=1)),
                ('description', models.TextField(blank=True, help_text='Optional description or notes')),
                ('location', models.CharField(help_text='Location for this office hour', max_length=200)),
                ('assigned_ta', models.ForeignKey(blank=True, help_text='TA assigned to this duty', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)sduties', to='accounts.taprofile')),
                ('created_by', models.ForeignKey(help_text='Instructor or staff who created this duty', limit_choices_to={'role': 'INSTRUCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)sduties', to=settings.AUTH_USER_MODEL)),
                ('offering', models.ForeignKey(help_text='Course offering this duty belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)sduties', to='courses.courseoffering')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProctoringDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.PositiveIntegerField(help_text='Length of duty in hours')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=1)),
                ('description', models.TextField(blank=True, help_text='Optional description or notes')),
                ('assigned_ta', models.ForeignKey(blank=True, help_text='TA assigned to this duty', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)sduties', to='accounts.taprofile')),
                ('created_by', models.ForeignKey(help_text='Instructor or staff who created this duty', limit_choices_to={'role': 'INSTRUCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)sduties', to=settings.AUTH_USER_MODEL)),
                ('exam', models.ForeignKey(help_text='Exam this proctoring duty is for', on_delete=django.db.models.deletion.CASCADE, related_name='proctoring_duties', to='courses.exam')),
                ('offering', models.ForeignKey(help_text='Course offering this duty belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)sduties', to='courses.courseoffering')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecitationDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.PositiveIntegerField(help_text='Length of duty in hours')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=1)),
                ('description', models.TextField(blank=True, help_text='Optional description or notes')),
                ('topic', models.CharField(help_text='Topic for this recitation session', max_length=200)),
                ('assigned_ta', models.ForeignKey(blank=True, help_text='TA assigned to this duty', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)sduties', to='accounts.taprofile')),
                ('created_by', models.ForeignKey(help_text='Instructor or staff who created this duty', limit_choices_to={'role': 'INSTRUCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)sduties', to=settings.AUTH_USER_MODEL)),
                ('offering', models.ForeignKey(help_text='Course offering this duty belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)sduties', to='courses.courseoffering')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
